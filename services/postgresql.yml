---
- name: Create postgres volume
  community.docker.docker_volume:
    name: "{{ postgres['data_volume'] }}"

- name: Create postgres container
  community.docker.docker_container:
    name: "{{ postgres['container_name'] }}"
    image: "{{ postgres['container_image'] }}"
    hostname: "{{ postgres['container_hostname'] }}"
    restart_policy: unless-stopped
    image_name_mismatch: recreate
    recreate: true
    ports:
      - "5432:5432"
    env:
      POSTGRES_USER: "{{ postgres_db_user }}"
      POSTGRES_PASSWORD: "{{ postgres_db_pass }}"
    networks:
      - name: "{{ postgres['network'] }}"
    volumes:
      - "{{ postgres['data_volume'] }}:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "{{ postgres_db_user }}"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

- name: Connect postgresql container to public network
  community.docker.docker_network:
    name: "{{ docker_networks[0].name }}"
    connected:
      - postgres
    appends: true

- name: Wait for PostgreSQL to become available
  community.docker.docker_container_exec:
    container: "{{ postgres['container_name'] }}"
    command: bash -c "until pg_isready -U {{ postgres_db_user }}; do sleep 1; done"
  register: result
  until: result is succeeded
  retries: 30
  delay: 1
