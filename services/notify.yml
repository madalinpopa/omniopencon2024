- name: Create notify volume
  community.docker.docker_volume:
    name: "{{ notify['data_volume'] }}"

- name: Create ntfy container
  community.docker.docker_container:
    name: "{{ notify['container_name'] }}"
    image: "{{ notify['container_image'] }}"
    hostname: "{{ notify['container_hostname'] }}"
    restart_policy: unless-stopped
    recreate: true
    env:
      TZ: Europe/Bucharest
      NTFY_BASE_URL: "https://{{ notify['domain'] }}"
      NTFY_CACHE_FILE: "/var/lib/ntfy/cache.db"
      NTFY_AUTH_FILE: "/var/lib/ntfy/auth.db"
      NTFY_AUTH_DEFAULT_ACCESS: "deny-all"
      NTFY_BEHIND_PROXY: "true"
      NTFY_ATTACHMENT_CACHE_DIR: "/var/lib/ntfy/attachments"
      NTFY_UPSTREAM_BASE_URL: https://ntfy.sh # this is for iOS phones
      NTFY_ENABLE_LOGIN: "true"
      # NTFY_WEB_ROOT: disable
    ports:
      - "2586:80"
    networks:
      - name: "{{ notify['network'] }}"
    volumes:
      - "{{ notify['data_volume'] }}:/var/lib/ntfy"
    command: serve

- name: Check if admin user exists
  community.docker.docker_container_exec:
    container: "{{ notify['container_name'] }}"
    command: ntfy user list
  register: admin_user


- name: Create admin user
  community.docker.docker_container_exec:
    container: "{{ notify['container_name'] }}"
    command: ntfy user add --role=admin {{ notify_admin_user }}
    env:
      NTFY_PASSWORD: "{{ notify_admin_pass }}"
  when: admin_user.stderr_lines is not search("admin")


